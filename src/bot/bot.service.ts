import { Injectable } from '@nestjs/common';
import { Command, Ctx, Hears, Help, Start, Update } from 'nestjs-telegraf';
import { Context, Markup } from 'telegraf';
import { WizardContext } from './types/wizard-context.type';
import { RequiresAuth } from './decorators/requires-auth.decorator';

const MAIN_MENU = Markup.keyboard([
  ['ü§ñ –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –æ—Ç LLM'],
  ['üì© –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É'],
]).resize();

@Update()
@Injectable()
export class BotService {
  @Start()
  async onStart(@Ctx() ctx: Context) {
    await ctx.reply(
      'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n/help - —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è\n/menu - –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
      MAIN_MENU,
    );
  }

  @Help()
  async onHelp(@Ctx() ctx: Context) {
    await ctx.reply(
      `‚ùóÔ∏è <b>–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ mini-app.</b>\n<i>(–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –±–æ—Ç–∞ –≤–Ω–∏–∑—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ mini-app)</i>\n\n` +
        `<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n` +
        `üëã /start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞\n` +
        `‚ÑπÔ∏è /help - –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n` +
        `üìã /menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏–π\n` +
        `üö´ /cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n\n` +
        `<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:</b>\n` +
        `ü§ñ –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –æ—Ç LLM\n - –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏ –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ —á–∞—Ç–∞, –ø—Ä–∏ —ç—Ç–æ–º –∏—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –Ω–µ –±—É–¥–µ—Ç.\n\n` +
        `üì© –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n - –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞.`,
      { parse_mode: 'HTML' },
    );
  }

  @Command('menu')
  async onMenu(@Ctx() ctx: Context) {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:', MAIN_MENU);
  }

  @Command('cancel')
  async onCancel(@Ctx() ctx: Context) {
    await ctx.reply('ü§∑‚Äç‚ôÇÔ∏è –°–µ–π—á–∞—Å –Ω–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å.');
  }

  // @RequiresAuth()
  @Hears('ü§ñ –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –æ—Ç LLM')
  async onQuickLLM(@Ctx() ctx: WizardContext) {
    await ctx.scene.enter('quick-answer');
  }

  @RequiresAuth()
  @Hears('üì© –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É')
  async onSupport(@Ctx() ctx: WizardContext) {
    await ctx.scene.enter('support-wizard');
  }
}
